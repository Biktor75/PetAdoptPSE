<ui:composition template="/WEB-INF/template.xhtml"
                xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:p="http://primefaces.org/ui">

    <ui:define name="contenido">
        <h2>Chat en tiempo real</h2>

        <h:form id="chatForm">
            <table>
                <tr>
                    <td>
                        <p:outputLabel value="Mensajes" />
                        <p:inputTextarea id="chatlog" readonly="true" rows="10" cols="50" autoResize="false" />
                    </td>
                    <td>
                        <p:outputLabel value="Usuarios" />
                        <p:inputTextarea id="users" readonly="true" rows="10" cols="20" autoResize="false" />
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <input type="hidden" id="username" value="#{loginView.authenticatedUser.nombre}" />
                        <p:inputText id="texto" style="width:300px; display:none;" />

                        <p:commandButton id="unirse" value="Unirse" type="button"
                                         onclick="join();" icon="ui-icon-arrowreturnthick-1-e" />

                        <p:commandButton id="enviar" value="Enviar" type="button"
                                         onclick="send_message();" style="visibility:hidden" icon="ui-icon-play" />

                        <p:commandButton id="desconectar" value="Desconectarse" type="button"
                                         onclick="disconnect();" style="visibility:hidden" icon="ui-icon-arrowreturnthick-1-w" />
                    </td>
                </tr>
            </table>
        </h:form>


        <div id="output" style="margin-top: 20px;"></div>

        <script type="text/javascript">
            var wsUri = 'ws://' + document.location.host +
                    document.location.pathname.substr(0, document.location.pathname.indexOf("/faces")) + '/websocket';

            var websocket = new WebSocket(wsUri);
            var username = "";
            var textField, users, chatlog;

            window.onload = function () {
                textField = document.getElementById("chatForm:texto");
                users = document.getElementById("chatForm:users");
                chatlog = document.getElementById("chatForm:chatlog");
                username = document.getElementById("username").value;
            };

            function join() {
                websocket.send(username + " joined");
                document.getElementById("chatForm:unirse").style.display = "none";
                document.getElementById("chatForm:enviar").style.visibility = "visible";
                document.getElementById("chatForm:desconectar").style.visibility = "visible";
                document.getElementById("chatForm:texto").style.display = "inline";
            }

            function send_message() {
                if (textField.value.trim() !== "") {
                    websocket.send(username + ": " + textField.value);
                    textField.value = "";
                }
            }

            function disconnect() {
                websocket.close();
                document.getElementById("chatForm:enviar").style.visibility = "hidden";
                document.getElementById("chatForm:desconectar").style.visibility = "hidden";
                document.getElementById("chatForm:unirse").style.display = "inline";
                document.getElementById("chatForm:texto").style.display = "none";
            }

            websocket.onopen = function () {
                writeToScreen("üîå Conectado al servidor");
            };

            websocket.onclose = function () {
                writeToScreen("‚ùå Desconectado");
            };

            websocket.onmessage = function (evt) {
                if (evt.data.includes("joined")) {
                    users.value += evt.data.split(" joined")[0] + "\n";
                } else {
                    chatlog.value += evt.data + "\n";
                }
            };

            websocket.onerror = function (evt) {
                writeToScreen("‚ö†Ô∏è ERROR: " + evt.data);
            };

            function writeToScreen(message) {
                const output = document.getElementById("output");
                const pre = document.createElement("p");
                pre.style.wordWrap = "break-word";
                pre.innerHTML = message;
                output.appendChild(pre);
            }
        </script>
    </ui:define>
</ui:composition>
